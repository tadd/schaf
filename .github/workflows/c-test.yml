name: C CI

on:
  pull_request:
  workflow_dispatch:
  push:
    branches-ignore:
      - '_**'
      - '**wip**'

jobs:
  build-ubuntu:
    if: ${{ ! startsWith(github.event.head_commit.message, 'WIP') }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - run: |
        sudo apt install -U --no-install-recommends libcriterion-dev valgrind
    - name: Make binaries
      run: make -j4 schaf{,-san} test/basic-test{,-san}
    - name: Test
      run: make test
    - name: Test with Santizer
      run: make sanitize
    - name: Test with stress
      run: make test-stress
    - name: Test optimized
      run: make clean && make -j4 test OPTFLAGS='-O3 -flto=auto'
    - name: Test optimized with Sanitizer
      run: make -j4 sanitize OPTFLAGS='-O3 -flto=auto'
    - name: Test optimized with stress
      run: make test-stress OPTFLAGS='-O3 -flto=auto'
    - name: Clang - Make binaries
      run: make clean && make -j4 schaf{,-san} test/basic-test{,-san} CC=clang
    - name: Clang - Test
      run: make test CC=clang
    - name: Clang - Test with Santizer
      run: make sanitize CC=clang
    - name: Clang - Test with stress
      run: make test-stress CC=clang
    - name: Clang - Test optimized
      run: make clean && make -j4 test CC=clang OPTFLAGS='-O3 -flto=auto'
    - name: Clang - Test optimized with Sanitizer
      run: make -j4 sanitize CC=clang OPTFLAGS='-O3 -flto=auto'
    - name: Clang - Test optimized with stress
      run: make test-stress CC=clang OPTFLAGS='-O3 -flto=auto'

  build-macos:
    if: ${{ ! startsWith(github.event.head_commit.message, 'WIP') }}
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - run: |
        brew update
        brew install criterion coreutils
        echo CPATH="/opt/homebrew/include:$CPATH" >> "$GITHUB_ENV"
        echo LIBRARY_PATH="/opt/homebrew/lib:$LIBRARY_PATH" >> "$GITHUB_ENV"
    - name: Make binaries
      run: make clean && make -j3 schaf{,-san} test/basic-test{,-san} CC=clang
    - name: Test
      run: make test CC=clang
    - name: Test with Santizer
      run: make sanitize CC=clang
    - name: Test optimized
      run: make clean && make -j3 test CC=clang OPTFLAGS='-O3 -flto=auto'
    - name: Test optimized with Sanitizer
      run: make -j3 sanitize CC=clang OPTFLAGS='-O3 -flto=auto'
    - name: Test optimized with stress
      run: make test-stress CC=clang OPTFLAGS='-O3 -flto=auto'
